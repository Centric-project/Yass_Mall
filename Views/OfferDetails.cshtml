@using ContentModels = Umbraco.Web.PublishedModels;
@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.OfferDetails>
@using Umbraco.Web.Mvc;
@{
    Layout = "master.cshtml";
    ViewBag.PageTitle = Model.OfferTitle;

    var lang = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName;
    // You May Like Offers
    var randomOffers = GetTopTwoRandomOffers();
}
<style type="text/css">
    .offer-detail-holder .offdetail-img .db-bg {
        padding: 0px !important;
    }

    .offdetail-content p {
        text-align: justify;
    }
</style>
<!--Start Main Banner-->
@{
    var mainBannerImg = Model.Value<IPublishedContent>("offerDetailPageBanner");
    if (mainBannerImg != null)
    {
        <section class="main-banner">
            <div class="container-fluid custom-container-fluid">
                <div class="main-slide">
                    @{
                        var obVideo = Model.Value<IPublishedContent>("offerDetailPageBannerVideo");
                        if (obVideo != null)
                        {
                            @*var obExt = OfferBanner.GetProperty("umbracoExtension").Value;
                                if (obExt == "mp4")*@
                            <div class="slide video-slide">
                                <div class="clearfix sliderVideo-holder">
                                    <video id="slider_video" class="tv_video hide-for-small-only"
                                           poster="@mainBannerImg.Url()" controls="controls" autoplay muted>
                                        <source src="@obVideo.Url()" type="video/mp4" />
                                        Your browser does not support the video tag.
                                    </video>
                                    @*<div class="play-bt"></div>
                                        <div class="pause-bt" style="display:none;"></div>*@
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="slide">
                                <img src="@mainBannerImg.Url()" alt="@Model.Value("offerTitle")" class="img-fluid" />
                            </div>
                        }
                    }
                </div>
            </div>
        </section>
    }
}
<!--End Main Banner-->
<!--Start Inner Page Wrapper-->
<div class="inner-section">
    <div class="container-fluid custom-container-fluid">
        <div class="row">
            <div class="col-md-12">
                <!--Start Breadcrumbs-->
                <nav aria-label="breadcrumb" class="breadcrumb-holder">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a class="gtm-track-button-event" name="btnBreadCrumbsHome" href="@Umbraco.GetDictionaryValue("LogoHref")">@Umbraco.GetDictionaryValue("Home")</a></li>
                        <li class="breadcrumb-seprator"><i class="fas fa-angle-right"></i></li>
                        <li class="breadcrumb-item" aria-current="page"><a class="gtm-track-button-event" name="btnBreadCrumbsOffer" href="@Umbraco.GetDictionaryValue("OffersHref")">@Umbraco.GetDictionaryValue("Offers")</a></li>
                        <li class="breadcrumb-seprator"><i class="fas fa-angle-right"></i></li>
                        <li class="breadcrumb-item active" aria-current="page">@Model.Value("offerTitle")</li>
                    </ol>
                </nav>
                <!--End Breadcrumbs-->
                <!--Start Detail Section-->
                <section class="offer-detail-holder">
                    <div class="row">
                        <div class="col-md-6 offdetail-content">
                            <div class="offers-box">
                                <h5 class="off-title">@Model.Value("offerTitle")</h5>
                                <div class="clearfix offer-datebox">
                                    <span class="offer-date">
                                        <i><img src="/assets/images/icon-timecalendar.svg" alt="" class="img-fluid" /></i>
                                        <strong>
                                            @String.Format("{0:dd MMM}", Model.Value("offerStartDate")) - @String.Format("{0:dd MMM}", Model.Value("offerEndDate"))
                                            <span class="year">@String.Format("{0:yyyy}", Model.Value("offerEndDate"))</span>
                                        </strong>
                                    </span>
                                </div>
                                @Html.Raw(Model.Value("offerBigDetails"))
                                <div class="share">
                                    <a href="javascript:void(0)">
                                        <img src="/assets/images/share-fb.jpg" alt="" class="img-fluid" />
                                    </a>
                                    <a href="javascript:void(0)">
                                        <img src="/assets/images/share-twitter.jpg" alt="" class="img-fluid" />
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 offdetail-img">
                            <div class="db-bg">
                                @{
                                    var offerDetailPageImg = Model.Value<IPublishedContent>("offerDetailPageImg");
                                    if (offerDetailPageImg != null)
                                    {

                                        <img src="@offerDetailPageImg.Url()" alt="@Model.Value("offerTitle")" class="img-fluid" />
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </section>
                <!--End Detail Section-->
                @{
                    if (randomOffers.TotalCount > 0)
                    {
                        int itemSno = 1;
                        <!--Start Main Title-->
                        <div class="clearfix title-holder">
                            <h5 class="title small-title">@Umbraco.GetDictionaryValue("MoreOffers")</h5>
                        </div>
                        <!--End Main Title-->
                        <!--Start May Also Like-->
                        <section class="offers-box">
                            <div class="row">
                                @foreach (IPublishedContent offer in randomOffers.Items)
                                {
                                    var offerThumbImage = offer.Value<IPublishedContent>("offerThumbImage");
                                    <div class="col-md-6 @((itemSno % 2) == 0 ? "pl-none" : "pr-none") small-offers">
                                        <div class="clearfix smalloff-holder">
                                            <div class="row">
                                                <div class="col-md-6 pr-none">
                                                    <div class="offer-box">
                                                        <h5 class="off-title">@offer.Value("offerTitle")</h5>
                                                        <p class="off-des">@offer.Value("offerSmallDetails")</p>
                                                        <a href="@offer.Url()">@Umbraco.GetDictionaryValue("ReadMore")</a>
                                                        <div class="clearfix offer-datebox">
                                                            <span class="offer-date">
                                                                <i><img src="/assets/images/icon-timecalendar.svg" alt="" class="img-fluid" /></i>
                                                                <strong>
                                                                    @String.Format("{0:dd MMM}", offer.Value("offerStartDate")) - @String.Format("{0:dd MMM}", offer.Value("offerEndDate"))
                                                                    <span class="year">@String.Format("{0:yyyy}", offer.Value("offerEndDate"))</span>
                                                                </strong>
                                                            </span>
                                                            <div class="share"><a href="javascript:void(0)"><img src="/assets/images/icon-share.svg" class="img-fluid" alt="" /></a></div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6 pl-none">
                                                    <figure>
                                                        @{
                                                            if (offerThumbImage != null)
                                                            {
                                                                <img src="@offerThumbImage.Url()" alt="@offer.Value("offerTitle")" class="img-fluid" />
                                                            }
                                                        }
                                                    </figure>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    itemSno = itemSno + 1;
                                }
                            </div>
                        </section>
                        <!--End May Also Like-->
                    }
                }
            </div>
        </div>
    </div>
</div>
<!--End Inner Page Wrapper-->
@functions {
    private dynamic GetTopTwoRandomOffers()
    {
        var rand = new Random();
        // var selectedPost = q.Skip(rand.Next(0, q.Count())).Take(1).FirstOrDefault();

        var itmId = Model.Id;
        IEnumerable<IPublishedContent> items = null;

        int totalCount = Model.AncestorOrSelf("offerLandingDocType")//Model.AncestorOrSelf(1).DescendantsOfType("offerLandingDocType").Children()
            .Children().Where(x => x.IsVisible() && x.ContentType.Alias == "offerdetails")
            .Count();

        items = Model.AncestorOrSelf("offerLandingDocType").Children()
            .Where(x => x.IsVisible() && x.ContentType.Alias == "offerdetails" && x.Id != itmId)
            .Skip(rand.Next(0, totalCount) - 2).Take(2);
        //.Where(x => x.Id != itmId)

        return new
        {
            Items = items == null ? new List<IPublishedContent>() : items,
            TotalCount = totalCount
        };
    }
}
@inherits Umbraco.Web.Mvc.UmbracoViewPage
@{
    Layout = "Master.cshtml";

    var lang = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName;

    // get qs params
    string sort = Request.QueryString["sort"]; // sort order
                                               //var tab = Request.QueryString["t"]; // current tab

    // set up pages
    int page = 0, pageSize = 24;
    int.TryParse(Request.QueryString["p"], out page);

    // get entertainments
    var entertainments = GetEntertainments(page, pageSize, sort);

    // get page count
    int pageCount = (entertainments.TotalCount % pageSize != 0) ? (entertainments.TotalCount / pageSize) + 1 : entertainments.TotalCount / pageSize; // get page count

    // set page title segment
    ViewBag.PageTitle = Model.Value("entertainMainTitle");

    // meta fallback
    ViewBag.MetaDescription = Model.Value("entertainMainDescription");
}
<!--Start Main Banner-->
<section class="main-banner">
    <div class="container-fluid custom-container-fluid">
        <div class="main-slide">
            @{
                var entertainMainImg = Model.Value<IPublishedContent>("entertainMainBanner");
                if (entertainMainImg != null)
                {
                    <div class="slide">
                        <img src="@entertainMainImg.Url" alt="@Model.Value("entertainMainTitle")" class="img-fluid" />
                    </div>
                }
            }
        </div>
    </div>
</section>
<!--End Main Banner-->
<!--Start Search Box-->
<section class="filter-holder">
    <div class="container-fluid custom-container-fluid">
        <div class="row">
            <div class="col-md-12">
                <!--Start Breadcrumbs-->
                <nav aria-label="breadcrumb" class="breadcrumb-holder">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a class="gtm-track-button-event" name="btnBreadCrumbsHome" href="@Umbraco.GetDictionaryValue("logoHref")">@Umbraco.GetDictionaryValue("home")</a></li>
                        <li class="breadcrumb-seprator"><i class="fas fa-angle-right"></i></li>
                        <li class="breadcrumb-item active" aria-current="page">@Model.Value("entertainMainTitle")</li>
                    </ol>
                </nav>
                <!--End Breadcrumbs-->
                <div class="filter-box">
                    <div class="row">
                        @Html.Raw(Model.Value("entertainMainDescription"))
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!--End Search Box-->
<!--Start Search Result-->
    <section class="search-result">
        <div class="container-fluid custom-container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="search-result-container">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="result-detail">
                                    @if (lang == "ar")
                                    {
                                        @("نتيجة البحث : " + entertainments.TotalCount + " العثور على العلامات التجارية")
                                    }
                                    @if (lang == "en")
                                    {
                                        @("Search Result : " + entertainments.TotalCount + " Brands Found")
                                    }
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="sort-box">
                                    <label for="cmbSortData">@Umbraco.GetDictionaryValue("SearchOrder")</label>
                                    <select id="cmbSortData" name="cmbSortData" class="form-control">
                                        <option @(sort == "asc" ? "selected" : "") value="asc">@Umbraco.GetDictionaryValue("AlphabetAtoZ")</option>
                                        <option @(sort == "desc" ? "selected" : "") value="desc">@Umbraco.GetDictionaryValue("AlphabetZtoA")</option>
                                    </select>
                                </div>
                            </div>
                            @foreach (IPublishedContent entertain in entertainments.Entertain)
                            {
                                var entertainLogo = entertain.Value<IPublishedContent>("entertainLogo");
                                <div class="col-md-3">
                                    <div class="brand-box">
                                        <a href="@entertain.Url()" class="gtm-track-tile-event" name="@entertain.Name-tile">
                                            <div class="prod-name">
                                                @Html.Raw(entertain.Value("entertainmentTitle"))
                                            </div>
                                            <div class="brand-logo">
                                                <img src="@entertainLogo.Url()" alt="@entertain.Value("entertainmentTitle")" />
                                            </div>
                                            @{
                                                string floorLoc = entertain.Value<string>("floorName");
                                                if (!string.IsNullOrWhiteSpace(floorLoc))
                                                {
                                                    <div class="sale-cont">
                                                        <strong>@Umbraco.GetDictionaryValue("Location")</strong>
                                                        @floorLoc
                                                    </div>
                                                }
                                            }
                                        </a>
                                    </div>
                                </div>
                            }
                            <div class="col-md-12 load-more-box">
                                @if (pageCount > 1)
                                {
                                    <!-- pagination -->
                                    <div class="row paging">
                                        <div class="col-md-12">
                                            <div class="sort-alpha-numb">
                                                <ul>
                                                    @for (int p = 0; p < pageCount; p++)
                                                    {
                                                        string queryStr = "?p=" + p;
                                                        if (!string.IsNullOrEmpty(sort)) { queryStr = queryStr + "&sort=" + sort; }
                                                        <li class="@(p == page ? "active" : null) gtm-track-paging-event" name="@((p + 1) + "-Paging")"><a href="@queryStr">@(p + 1)</a></li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <!-- Total: @entertainments.TotalCount, Pages: @pageCount -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
  <!--End Search Result-->
@functions {
    private dynamic GetEntertainments(int page, int pageSize, string sort)
    {
        IEnumerable<IPublishedContent> entertainments = Model.AncestorOrSelf(1).DescendantsOfType("entertainmentList");
        //IEnumerable<IPublishedContent> entertainments = Model.AncestorOrSelf(1).DescendantsOfType("entertainLandingDocType")
        //
        int totalCount = 0;

        if (entertainments != null)
        {
            totalCount = entertainments.Count();
            if (string.IsNullOrEmpty(sort)) { sort = ""; }
            if (sort.ToLower() == "desc")
            {
                entertainments = entertainments.OrderByDescending(x => x.Name);
            }
            else
            {
                entertainments = entertainments.OrderBy(x => x.Name);
            }
            entertainments = entertainments.Skip(page * pageSize).Take(pageSize);
        }
        return new
        {
            Entertain = entertainments == null ? new List<IPublishedContent>() : entertainments,
            TotalCount = totalCount
        };
    }
}
<script type="text/javascript">
    $(function () {
        $(".search-result-container .brand-box").slice(0, 24).show();

        $("#btnSearch").click(function (e) {
            var selCateg = $("#cmbShopCategory").val();
            if (selCateg != "") {
                window.location.href = selCateg;
            }
        });

        $("#cmbSortData").change(function () {
            const parsedUrl = new URL(window.location.href);
            parsedUrl.searchParams.set('sort', this.value);
            window.location.href = parsedUrl.href;
        });
        ////$("#loadMore").on('click', function (e) {
        ////    e.preventDefault();
        ////    $(".search-result-container .brand-box:hidden").slice(0, 4).slideDown();
        ////    if ($(".search-result-container .brand-box:hidden").length == 0) {
        ////        $("#load").fadeOut('slow');
        ////    }
        ////    $('html,body').animate({
        ////        scrollTop: $(this).offset().top
        ////    }, 1500);
        ////});
    });
</script>
@* the fun starts here *@


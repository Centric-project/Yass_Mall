@using ContentModels = Umbraco.Web.PublishedModels;
@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.FeaturedItemDocType>
@using Umbraco.Web.Mvc;
@{
    Layout = "master.cshtml";

    // set page title segment
    ViewBag.PageTitle = Model.Value("shopTitle");

    // meta fallback
    ViewBag.MetaDescription = Model.Value("smallDetails");
}
<!--Start Main Banner-->
@{
    var shopBannerImg = Model.Value<IPublishedContent>("detailsPageBanner");
    if (shopBannerImg != null)
    {
        <section class="main-banner">
            <div class="container-fluid custom-container-fluid">
                <div class="main-slide">
                    <div class="slide">
                        <img src="@shopBannerImg.Url()" alt="@Model.Value("shopTitle")" class="img-fluid" />
                    </div>
                </div>
            </div>
        </section>
    }
}
<!--End Main Banner-->
<!--Start Product Details-->
<section class="product-details">
    <div class="container-fluid custom-container-fluid">
        <div class="row">
            <div class="col-md-12">
                <!--Start Breadcrumbs-->
                <nav aria-label="breadcrumb" class="breadcrumb-holder">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Umbraco.GetDictionaryValue("LogoHref")">@Umbraco.GetDictionaryValue("Home")</a></li>
                        <li class="breadcrumb-seprator"><i class="fas fa-angle-right"></i></li>
                        <li class="breadcrumb-item"><a href="@Umbraco.GetDictionaryValue("ShopHref")">@Umbraco.GetDictionaryValue("Shop")</a></li>
                        <li class="breadcrumb-seprator"><i class="fas fa-angle-right"></i></li>
                        <li class="breadcrumb-item active" aria-current="page">@Model.Value("shopTitle")</li>
                    </ol>
                </nav>
                <!--End Breadcrumbs-->
                <div class="product-box">
                    <div class="row">
                       @* <div class="col-lg-3 col-md-4">
                            <div class="feat-logo">
                                @{
                                    var shopLogo = Model.Value<IPublishedContent>("shopLogo");
                                    if (shopLogo != null)
                                    {
                                        <img src="@shopLogo.Url()" alt="@Model.Value("shopTitle")" />
                                    }
                                }
                            </div>
                            <div class="share-box">
                                <ul>
                                    <li>
                                        <a href="javascript:void:(0);" data-text="@Model.Value("shopTitle")" data-url="" data-type="facebook">
                                            <img src="/assets/images/facebook.png" alt="Facebook" />
                                        </a>
                                    </li>
                                    <li>
                                        <a href="javascript:void:(0);" data-text="@Model.Value("shopTitle")" data-url="" data-type="twitter">
                                            <img src="/assets/images/twitter.png" alt="Twitter" />
                                        </a>
                                    </li>
                                    <li>
                                        <a href="javascript:void:(0);" data-text="@Model.Value("shopTitle")" data-url="" data-type="instagram">
                                            <img src="/assets/images/instagram-icon.png" alt="instagram" />
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>*@
                        <div class="col-lg-9 col-md-5">
                            <div class="prod-details">
                                <h2 class="feat-title">@Model.Value("shopTitle")</h2>
                                <p class="description">
                                    @Model.Value("shopDetails")
                                </p>
                            </div>
                        </div>
                        <hr class="hr-fw" />
                        <div class="col-lg-3 col-md-3"></div>
                        <div class="col-lg-4 col-md-5">
                            <p class="timing">
                                <h5>@Umbraco.GetDictionaryValue("Timings")</h5>
                                @Html.Raw(Model.Value("openingTimes"))
                            </p>
                            <p class="location">
                                @{
                                    string floorLoc = Model.Value<string>("floorName");
                                    if (!string.IsNullOrWhiteSpace(floorLoc))
                                    {
                                        <h5>@Umbraco.GetDictionaryValue("Location"):</h5>
                                        @floorLoc;
                                    }
                                }
                            </p>
                            <p class="contact">
                                @Html.Raw(Model.Value("contactUs"))
                            </p>
                        </div>
                        <div class="col-lg-5 col-md-3">
                            @{
                                var locationMap = Model.Value<IPublishedContent>("locationMap");
                                var locationBigMap = Model.Value<IPublishedContent>("locationMapBigImage");
                                if (locationMap != null)
                                {
                                    <p class="Location:">
                                        @{
                                            string nearParking = Model.Value<string>("nearestParking");
                                            if (!string.IsNullOrWhiteSpace(nearParking))
                                            {
                                                <h5>@Umbraco.GetDictionaryValue("NearestParking"):</h5>
                                                @nearParking;
                                            }
                                        }
                                    </p>
                                    <a class="map-img" data-toggle="modal" data-target="#zoomModal">
                                        <img src="@locationMap.Url()" alt="@(Model.Value("shopTitle")) - Map" />
                                    </a>
                                    <!-- Modal -->
                                    <div class="modal fade" id="zoomModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                                <div class="modal-body">
                                                    @if (locationBigMap != null)
                                                    {
                                                        <img src="@locationBigMap.Url()" alt="@(Model.Value("shopTitle")) - Map" />
                                                    }
                                                    else
                                                    {
                                                        <img src="@locationMap.Url()" alt="@(Model.Value("shopTitle")) - Map" />
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <p>Location map is not available.</p>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!--End Product Details-->
<!--Start Featured Item Gallery-->
@{
    IEnumerable<IPublishedContent> fetProdGallery = Model.Children().Where(x => x.IsVisible());
    if (fetProdGallery != null && fetProdGallery.Count() > 0)
    {
        <section class="box-holder featured-holder lg-box">
            <!--Start Feature Slider-->
            <div class="container-fluid custom-container-fluid">
                <div class="row">
                    <div class="col-md-12" data-aos="fade-up">
                        <div class="custom-slider feature-slider gtm-mainsec">
                            @{
                                foreach (var fItem in fetProdGallery)
                                {
                                    var thumbImage = fItem.Value<IPublishedContent>("productThmbImage");
                                    if (thumbImage != null)
                                    {
                                        var fPageLink = fItem.Value<IPublishedContent>("shopPageLink");
                                        var fPageLinkURL = fPageLink == null ? fItem.Url() : fPageLink.Url();
                                        <div class="slide">
                                            <div class="feature-box">
                                                <a href="@fPageLinkURL" class="gtm-track-tile-event" name="@fItem.Value("shopTitle", "en-US")-tile">
                                                    <figure>
                                                        <img src="@thumbImage.Url()" alt="@fItem.Value("productName")" class="img-fluid" />
                                                    </figure>
                                                </a>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <!--End Feature Slider-->
        </section>
    }
}
<!--End Featured Item Gallery-->
<!--Start Related Tags-->
@{
    var tags = Model.HasValue("outletTags") ?
        Model.Value<string[]>("outletTags").Select(s => s.ReplaceMany(new[] { '[', ']', '"' }, ' ').Trim()).Where(s => !string.IsNullOrWhiteSpace(s)).ToArray() : new string[0];

    if (tags.Length > 0)
    {
        <div class="content">
            <div class="row">
                <div class="col-md-12">
                    <div class="related-tags">
                        @if (Model.HasValue("outletTags"))
                        {
                            <h4>@Umbraco.GetDictionaryValue("RelatedTags")</h4>
                            <ul id="tagDiv">
                                @foreach (var tag in tags)
                                {
                                    <li><a class="tag gtm-track-more-event" name="@tag-MoreEvent" href="@Umbraco.GetDictionaryValue("taglink")?tag=@tag">@tag</a></li>
                                }
                            </ul>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}
<!--End Related Tags-->
<!--Start Featured Box-->
@{
    var featured = Model.AncestorOrSelf(1).DescendantsOfType("featuredLandingDocType").FirstOrDefault();//Model.Content.Site().FirstChild("featuredLandingDocType");
    if (featured != null)
    {
        <section class="box-holder featured-holder lb-box">
            <!--Start Heading-->
            <div class="heading-holder">
                <h2 class="sub-heading">@featured.Value("featuredMainTitle")</h2>
            </div>
            <!--End Heading-->
            <!--Start Feature Slider-->
            <div class="container-fluid custom-container-fluid">
                <div class="row">
                    <div class="col-md-12" data-aos="fade-up">
                        <div class="custom-slider feature-slider gtm-mainsec">
                            @{
                                IEnumerable<IPublishedContent> featItems = featured.Children().Where(x => x.IsVisible());
                                foreach (var fItem in featItems)
                                {
                                    IEnumerable<IPublishedContent> shopCats = new List<IPublishedContent>();
                                    var fShopCats = fItem.Value<IEnumerable<dynamic>>("shop_Category");
                                    if (fShopCats != null)
                                    {
                                        shopCats = Model.AncestorOrSelf(1).DescendantsOfType("shopCategory").FirstOrDefault() /*Model.Content.Site().FirstChild("shopCategory")*/.Children()
                                            .Where(x => x.IsVisible() && fShopCats.Any(sc => sc.Id == x.Id))
                                            .OrderBy(x => x.Name);
                                    }
                                    IEnumerable<IPublishedContent> dineCats = new List<IPublishedContent>();
                                    var fDineCats = fItem.Value<IEnumerable<dynamic>>("dine_Category");
                                    if (fDineCats != null)
                                    {
                                        dineCats = Model.AncestorOrSelf(1).DescendantsOfType("dineCategory").FirstOrDefault()/* Model.Content.Site().FirstChild("dineCategory")*/.Children()
                                            .Where(x => x.IsVisible() && fDineCats.Any(sc => sc.Id == x.Id))
                                            .OrderBy(x => x.Name);
                                    }

                                    var thumbImage = fItem.Value<IPublishedContent>("thumbImage");
                                    if (thumbImage != null)
                                    {
                                        var fPageLink = fItem.Value<IPublishedContent>("shopPageLink");
                                        var fPageLinkURL = fPageLink == null ? fItem.Url() : fPageLink.Url();
                                        <div class="slide">
                                            <div class="feature-box">
                                                <a href="@fPageLinkURL" class="gtm-track-tile-event" name="@fItem.Value("shopTitle", "en-US")-tile">
                                                    <figure>
                                                        <img src="@thumbImage.Url()" alt="@fItem.Value("shopTitle")" class="img-fluid" />
                                                    </figure>
                                                    <ul class="list-unstyled red-btn">
                                                        @foreach (var dcItem in dineCats)
                                                        {
                                                            <li class="feature-cat">@dcItem.Value("categoryTitle")</li>
                                                        }
                                                        @foreach (var scItem in shopCats)
                                                        {
                                                            <li class="feature-cat">@scItem.Value("categoryTitle")</li>
                                                        }
                                                        <li class="feature-title">@fItem.Value("shopTitle")</li>
                                                        <li class="feature-location">@fItem.Value("floorName")</li>
                                                    </ul>
                                                </a>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <!--End Feature Slider-->
        </section>
    }
}
<!--End Featured Box-->
<!--Start Most Preferred Brands-->
@{
    var objRandom = new Random();

    IEnumerable<IPublishedContent> shops = Model.AncestorOrSelf(1).DescendantsOfType("shopsLandingDocType").FirstOrDefault().Children().Where(x => x.IsVisible())
                    .Where(e => e.HasValue("shopCategory"));

    if (shops != null)
    {
        int totalCount = shops.Count();
        shops = shops.Skip(0).Take(8);
        <section class="box-holder brand-holder">
            <!--Start Heading-->
            <div class="heading-holder">
                <h2 class="sub-heading">@Umbraco.GetDictionaryValue("BrandsYouLove")</h2>
            </div>
            <!--End Heading-->
            <!--Start Feature Slider-->
            <div class="container-fluid custom-container-fluid">
                <div class="row">
                    <div class="col-md-12">
                        <div class="custom-slider brand-slider gtm-mainsec" data-section="brand-slider">
                            @foreach (var shop in shops)
                            {
                                <div class="slide">
                                    <div class="brand-box">
                                        <a href="@shop.Url()" class="gtm-track-tile-event" name="@shop.Name-tile">
                                            <div class="prod-name">
                                                @Html.Raw(shop.Value("shopTitle"))
                                            </div>
                                            @{
                                                var shopImage = shop.Value<IPublishedContent>("shopLogo");
                                                if (shopImage != null)
                                                {
                                                    <div class="brand-logo">
                                                        <img src="@shopImage.Url()" alt="@shop.Value("shopTitle")" />
                                                    </div>
                                                }
                                            }
                                            @{
                                                string salesTitle = shop.Value<string>("salesTitle");
                                                if (!string.IsNullOrWhiteSpace(salesTitle))
                                                {
                                                    if (System.DateTime.Now >= Convert.ToDateTime(shop.Value<DateTime>("salesStartDate")) &&
                                                        System.DateTime.Now <= Convert.ToDateTime(shop.Value<DateTime>("salesEndDate")))
                                                    {
                                                        <div class="sale-cont">
                                                            <strong>SALE</strong>
                                                            @salesTitle
                                                        </div>
                                                    }
                                                    else { salesTitle = ""; }
                                                }
                                                if (string.IsNullOrEmpty(salesTitle))
                                                {
                                                    string shopfloor = shop.Value<string>("floorName");
                                                    if (!string.IsNullOrWhiteSpace(shopfloor))
                                                    {
                                                        <div class="sale-cont">
                                                            <strong>@Umbraco.GetDictionaryValue("Location")</strong>
                                                            @shopfloor
                                                        </div>
                                                    }
                                                }
                                            }
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <!--End Feature Slider-->
        </section>
    }
}
<!--End Most Preferred Brands-->
@* the fun starts here *@